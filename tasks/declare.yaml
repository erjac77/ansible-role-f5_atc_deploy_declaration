---

- name: "{{ atc_method }} AS3 declaration"
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_url }}"
    method: "{{ atc_method }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    return_content: true
    validate_certs: "{{ provider.validate_certs }}"
    body_format: json
    body: "{{ lookup('file', atc_declaration_file) }}"
    status_code: 204, 202, 200
  register: atc_result
  changed_when:
    - atc_result.json.results | map(attribute='message') | list | first != 'no change'
    - atc_result.json.results | map(attribute='message') | list | first != 'Declaration successfully submitted'
  failed_when:
    - atc_result.json.results | map(attribute='message') | list | first != 'success'
    - atc_result.json.results | map(attribute='message') | list | first != 'no change'
    - atc_result.json.results | map(attribute='message') | list | first != 'Declaration successfully submitted'
  when:
    - atc_method == 'POST' or atc_method == 'DELETE'
    - act_service == "AS3"
    - atc_declaration_file is defined
  delegate_to: localhost

- name: "{{ atc_method }} DO declaration"
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_url }}"
    method: "{{ atc_method }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    return_content: true
    validate_certs: "{{ provider.validate_certs }}"
    body_format: json
    body: "{{ lookup('file', atc_declaration_file) }}"
    status_code: 202
  register: atc_result
  when:
    - atc_method == 'POST'
    - act_service == "Device"
    - atc_declaration_file is defined
  delegate_to: localhost

- name: "{{ method }} TS declaration"
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_url }}"
    method: "{{ atc_method }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    return_content: true
    validate_certs: "{{ provider.validate_certs }}"
    body_format: json
    body: "{{ lookup('file', atc_declaration_file) }}"
    status_code: 204, 202, 200
  register: atc_result
  failed_when:
    - atc_result.json.message != 'success'
  when:
    - atc_method == 'POST'
    - act_service == "Telemetry"
    - atc_declaration_file is defined

- name: "GET {{ atc_service }} declaration"
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_url }}"
    method: "{{ atc_method }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    return_content: true
    validate_certs: "{{ provider.validate_certs }}"
    status_code: 204, 202, 200
  register: atc_result
  when:
    - atc_method == 'GET'
  delegate_to: localhost
