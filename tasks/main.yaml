---

- name: Setup provider and varables
  set_fact:
    provider: "{{ provider }}"
    atc_declaration_url: "{{ atc_declaration_url|default(omit) }}"
    atc_declaration_file: "{{ atc_declaration_file|default(omit) }}"
    atc_tenant: "{{ as3_tenant|default(omit) }}"
    atc_show: "{{ as3_show|default(omit) }}"
    atc_show_hash: "{{ as3_showhash|default(false) }}"

- name: Download file if url specified
  get_url:
    url: "{{ atc_declaration_url }}"
    dest: "{{ atc_declaration_file }}"
    force: "{{ download_force }}"
  when: atc_declaration_url is defined
  delegate_to: localhost

- name: Set Automated Tool Chain service type from file
  set_fact:
    atc_service: "{{ (lookup('file', atc_declaration_file, errors='strict')| from_json).get('class') }}"
  when: atc_declaration_file is defined and atc_service is undefined

- name: Validate if atc_service name is correct if defined
  fail:
    msg: The specified atc_service is not valid
  when: atc_service not in valid_services

- name: Set Automated Tool Chain metadata
  set_fact:
    toolchain_metadata: "{{ lookup('file', 'files/toolchain_metadata.json', errors='strict') }}"

- name: Setup service "{{ atc_service }}" endpoints
  set_fact:
    atc_url: "{{ toolchain_metadata['components'][atc_service]['endpoints']['configure']['uri'] }}"
    atc_check_url: "{{ toolchain_metadata['components'][atc_service]['endpoints']['info']['uri'] }}"

- name: include authentication.yaml
  include_tasks: authentication.yaml

- name: Verify "{{ atc_service }}" service is available, and collect service info
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_check_url }}"
    timeout: "{{ atc_timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: atc_response
  until:
    - atc_response is success
    - atc_response.json is defined
  retries: "{{ atc_retries }}"
  delay: "{{ atc_delay }}"

- name: include as3_filtering.yaml
  include_tasks: as3_filtering.yaml
  when:
    - atc_service == "AS3"
    - atc_method in ['POST', 'GET']

- name: check as3 declaration and include teem data if needed
  teem_check:
    json_file_path: "{{ atc_declaration_file }}"

- name: include declare.yaml
  include_tasks: declare.yaml

- name: include atc_task_check.yaml
  include_tasks: atc_task_check.yaml
  when:
    - atc_service == "AS3" or atc_service == "Device"
